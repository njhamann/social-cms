// Generated by CoffeeScript 1.4.0
(function() {
  var About, Block, Bootstrap, CONFIG, Modal, TEMPLATES, g, ga, getVineVideos, init;

  CONFIG = {
    $cont: $('#block_container'),
    baseUrl: '/'
  };

  TEMPLATES = {
    about: $('#about').html(),
    block: $('#block').html(),
    modal: $('#modal').html()
  };

  Bootstrap = {
    Collections: {},
    Models: {},
    Views: {}
  };

  Modal = function(apiPath) {
    var ModalView;
    ModalView = Backbone.View.extend({
      el: 'body',
      template: TEMPLATES.modal,
      initialize: function() {
        this.render();
      },
      render: function() {
        var data, templ, _this;
        _this = this;
        $('#generic_modal').remove();
        data = {};
        data.item = this.model.toJSON();
        templ = _.template(this.template);
        this.$el.append(templ(data));
        $('#generic_modal').on('hidden', function() {
          $('#generic_modal').remove();
        });
        $('#generic_modal').on('shown', function() {
          if (data.item.type === 'foursquare') {
            _this.displayMap(data);
          } else if (data.item.type === 'vine') {
            _this.displayVideo(data);
          }
        });
        $('#generic_modal').modal('show');
      },
      displayMap: function(data) {
        var infowindow, mapOptions, myLatLng, _this;
        _this = this;
        myLatLng = new google.maps.LatLng(data.item.stash.lat, data.item.stash.lng);
        mapOptions = {
          mapTypeControl: true,
          mapTypeControlOptions: {
            style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
          },
          zoomControl: true,
          zoomControlOptions: {
            style: google.maps.ZoomControlStyle.SMALL
          },
          center: myLatLng,
          zoom: 12,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        this.map = new google.maps.Map(document.getElementById("map_container"), mapOptions);
        infowindow = new google.maps.InfoWindow({
          content: data.item.title
        });
        this.marker = new google.maps.Marker({
          position: myLatLng,
          map: this.map,
          title: data.item.title
        });
        google.maps.event.addListener(this.marker, 'click', function() {
          console.log('clicked marker');
          return infowindow.open(_this.map, _this.marker);
        });
      },
      displayVideo: function(data) {
        return 'hello';
      }
    });
    return {
      View: ModalView
    };
  };

  About = function(apiPath) {
    var AboutModel, AboutView;
    AboutModel = Backbone.Model.extend({
      idAttribute: 'id',
      url: apiPath,
      initialize: function() {},
      defaults: {}
    });
    AboutView = Backbone.View.extend({
      el: '#block_container',
      template: TEMPLATES.about,
      initialize: function() {
        var _this;
        _this = this;
        this.model.bind('change', function() {
          return _this.render();
        });
      },
      render: function() {
        var $newItems, data, templ;
        data = {};
        data.item = this.model.toJSON();
        templ = _.template(this.template);
        $newItems = $(templ(data));
        CONFIG.$cont.isotope('insert', $newItems);
        setTimeout(function() {
          return CONFIG.$cont.isotope({
            sortBy: 'number',
            sortAscending: false
          });
        }, 1000);
      }
    });
    return {
      view: AboutView,
      model: AboutModel
    };
  };

  Block = function(apiPath) {
    var BlockCollection, BlockModel, BlockView;
    BlockModel = Backbone.Model.extend({
      idAttribute: 'id',
      initialize: function() {},
      defaults: {}
    });
    BlockCollection = Backbone.Collection.extend({
      model: BlockModel,
      url: apiPath
    });
    BlockView = Backbone.View.extend({
      el: '#block_container',
      template: TEMPLATES.block,
      initialize: function() {
        var _this;
        _this = this;
        this.collection.bind('reset', function() {
          return _this.render();
        });
      },
      render: function() {
        var $newItems, data, templ;
        data = {};
        data.items = this.collection.toJSON();
        templ = _.template(this.template);
        $newItems = $(templ(data));
        CONFIG.$cont.isotope('insert', $newItems);
        setTimeout(function() {
          var filter;
          CONFIG.$cont.isotope({
            sortBy: 'number',
            sortAscending: false
          });
          filter = $('.main-nav a.active').attr('data-filter');
          CONFIG.$cont.isotope({
            filter: filter
          });
        }, 1000);
        $('.item-link, .profile-link').tooltip();
        getVineVideos(this.collection);
      }
    });
    return {
      view: BlockView,
      model: BlockModel,
      collection: BlockCollection
    };
  };

  init = function() {
    var a, am, av, f, fb, fbc, fbv, fc, fv, g, gc, gv, i, ic, iv, p, pc, pv, t, tc, tv;
    CONFIG.$cont.isotope({
      itemSelector: '.page-item',
      layoutMode: 'masonry',
      getSortData: {
        number: function($el) {
          return parseInt($el.attr('data-epoch'), 10);
        }
      }
    });
    $(document).on('click', '.instagram-type .item-image img', function(e) {
      var id, item, modal, modalView;
      e.preventDefault();
      id = $(e.target).parents('.instagram-type').attr('data-id');
      item = Bootstrap.Collections.instagram.get(id);
      modal = new Modal();
      modalView = new modal.View({
        model: item
      });
    });
    $(document).on('click', '.foursquare-type .item-image img', function(e) {
      var id, item, modal, modalView;
      e.preventDefault();
      id = $(e.target).parents('.foursquare-type').attr('data-id');
      item = Bootstrap.Collections.foursquare.get(id);
      console.log(item.toJSON());
      modal = new Modal();
      modalView = new modal.View({
        model: item
      });
    });
    $(document).on('click', '.vine-type .item-image img', function(e) {
      var id, item, modal, modalView;
      e.preventDefault();
      id = $(e.target).parents('.vine-type').attr('data-id');
      item = Bootstrap.Collections.twitter.get(id);
      console.log(item.toJSON());
      modal = new Modal();
      modalView = new modal.View({
        model: item
      });
    });
    $('.main-nav ul li').on('click', 'a.top-level', function(e) {
      var filter, loc;
      e.preventDefault();
      filter = $(this).attr('data-filter');
      CONFIG.$cont.isotope({
        filter: filter
      });
      loc = $(this).parent().index();
      $('.main-nav ul li a').removeClass('active');
      $(this).addClass('active');
      $('.the-question').fadeOut(500);
      $('.the-question').eq(loc).delay(500).fadeIn(500);
    });
    $('.main-nav ul li').on('click', 'ul.dropdown-menu li a', function(e) {
      var filter, loc;
      e.preventDefault();
      filter = $(this).attr('data-filter');
      CONFIG.$cont.isotope({
        filter: filter
      });
      loc = $(this).parent().index();
      $('.main-nav ul > li > a').removeClass('active');
      $(this).parents('ul.dropdown-menu').siblings('a.top-level').addClass('active');
      loc = $('.main-nav ul > li > a.active').index();
      $('.the-question').fadeOut(500);
      $('.the-question').eq(loc).delay(500).fadeIn(500);
    });
    $(document).on('mouseenter', '.page-item', function(e) {
      $(this).find('.icon-wrapper').fadeIn(250);
    }).on('mouseleave', '.page-item', function(e) {
      $(this).find('.icon-wrapper').fadeOut(250);
    });
    $('.email-type form').on('click', 'button', function(e) {
      var emailData;
      e.preventDefault();
      emailData = {};
      emailData.email = $('.email-type form input[name=email]').val();
      emailData.message = $('.email-type form textarea[name=message]').val();
      console.log('button clicked');
      $.ajax({
        url: CONFIG.baseUrl + 'api/send_email.php',
        data: emailData,
        success: function(data) {
          console.log(data);
          if (data.success) {
            $('.email-type .contact-form').hide();
            $('.email-type .contact-success').show();
          } else {
            alert('there was an issue with send your message');
          }
        }
      });
    });
    fb = new Block(CONFIG.baseUrl + 'api/facebook.php');
    fbc = new fb.collection();
    fbv = new fb.view({
      collection: fbc
    });
    fbc.fetch();
    Bootstrap.Collections.facebook = fbc;
    i = new Block(CONFIG.baseUrl + 'api/instagram.php');
    ic = new i.collection();
    iv = new i.view({
      collection: ic
    });
    ic.fetch();
    Bootstrap.Collections.instagram = ic;
    t = new Block(CONFIG.baseUrl + 'api/twitter.php');
    tc = new t.collection();
    tv = new t.view({
      collection: tc
    });
    tc.fetch();
    Bootstrap.Collections.twitter = tc;
    f = new Block(CONFIG.baseUrl + 'api/foursquare.php');
    fc = new f.collection();
    fv = new f.view({
      collection: fc
    });
    fc.fetch();
    Bootstrap.Collections.foursquare = fc;
    g = new Block(CONFIG.baseUrl + 'api/github.php');
    gc = new g.collection();
    gv = new g.view({
      collection: gc
    });
    gc.fetch();
    Bootstrap.Collections.github = gc;
    p = new Block(CONFIG.baseUrl + 'api/projects.php');
    pc = new p.collection();
    pv = new p.view({
      collection: pc
    });
    pc.fetch();
    Bootstrap.Collections.projects = pc;
    a = new About(CONFIG.baseUrl + 'api/linkedin.php');
    am = new a.model();
    av = new a.view({
      model: am
    });
    return am.fetch();
  };

  ga = function() {
    var events;
    events = function() {
      return $(document).on('click', '.main-nav ul li a', function() {
        return _gaq.push(['_trackEvent', 'home_page', 'main_nav', $(this).attr('data-filter')]);
      });
    };
    return {
      events: events
    };
  };

  getVineVideos = function(c) {
    var model, vineModels, _i, _len;
    vineModels = c.where({
      'type': 'vine'
    });
    if (vineModels.length > 0) {
      for (_i = 0, _len = vineModels.length; _i < _len; _i++) {
        model = vineModels[_i];
        $.ajax({
          url: '/api/get_vine_video.php',
          data: {
            id: model.id,
            vine_url: model.get('link')
          },
          success: function(data) {
            var $el, vineModel;
            $el = $('[data-id=' + data.id + ']');
            vineModel = c.get(data.id);
            vineModel.set(data);
            $el.find('.item-image img').attr('src', data.screen_url);
          }
        });
      }
    }
  };

  init();

  g = new ga();

  g.events();

  window.Bootstrap = Bootstrap;

  window.About = About;

  window.Block = Block;

}).call(this);
